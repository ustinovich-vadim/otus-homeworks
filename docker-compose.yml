version: '3.8'

services:
    app:
        build:
            context: ./docker
            dockerfile: Dockerfile
        container_name: app
        working_dir: /var/www
        volumes:
            - .:/var/www
        networks:
            - app_network
        command: >
            sh -c "
            mkdir -p /var/www/storage /var/www/bootstrap/cache &&
            chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache &&
            php-fpm
            "

    webserver:
        image: nginx:alpine
        container_name: webserver
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - app
        networks:
            - app_network

    db:
        image: postgres:16
        container_name: db
        environment:
            POSTGRES_DB: laravel
            POSTGRES_USER: laravel
            POSTGRES_PASSWORD: secret
        volumes:
            - dbdata:/var/lib/postgresql/data
            - ./docker/postgres-config/postgresql.conf:/etc/postgresql/postgresql.conf
            - ./docker/postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
            - ./docker/postgres-config/init.sql:/docker-entrypoint-initdb.d/init.sql
        entrypoint: ["sh", "-c", "apt-get update && apt-get install -y gosu && mkdir -p /var/lib/postgresql/data/archive && chown -R postgres:postgres /var/lib/postgresql/data/archive && chmod -R 700 /var/lib/postgresql/data/archive && gosu postgres postgres -c config_file=/etc/postgresql/postgresql.conf"]
        ports:
            - "5433:5432"
        networks:
            - app_network

    db_slave_1:
        image: postgres:16
        container_name: db_slave_1
        environment:
            POSTGRES_DB: laravel
            POSTGRES_USER: replicator
            POSTGRES_PASSWORD: pass
            PGPASSWORD: pass
        volumes:
            - db_slave_data:/var/lib/postgresql/data
            - ./docker/postgres-slave1-config/postgresql.conf:/etc/postgresql/postgresql.conf
            - ./docker/postgres-slave1-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
            - ./docker/postgres-slave1-config/init.sql:/docker-entrypoint-initdb.d/init.sql
        entrypoint: ["sh", "-c", "apt-get update && apt-get install -y gosu && rm -rf /var/lib/postgresql/data/* && gosu postgres pg_basebackup -h db -p 5432 -D /var/lib/postgresql/data -U replicator -v -P --wal-method=stream && chmod -R 700 /var/lib/postgresql/data && echo \"primary_conninfo = 'host=db port=5432 user=replicator password=pass'\" >> /var/lib/postgresql/data/postgresql.conf && touch /var/lib/postgresql/data/standby.signal && gosu postgres postgres -c config_file=/etc/postgresql/postgresql.conf"]
        depends_on:
            - db
        ports:
            - "5434:5432"
        networks:
            - app_network

    db_slave_2:
        image: postgres:16
        container_name: db_slave_2
        environment:
            POSTGRES_DB: laravel
            POSTGRES_USER: replicator
            POSTGRES_PASSWORD: pass
            PGPASSWORD: pass
        volumes:
            - db_slave_data:/var/lib/postgresql/data
            - ./docker/postgres-slave2-config/postgresql.conf:/etc/postgresql/postgresql.conf
            - ./docker/postgres-slave2-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
            - ./docker/postgres-slave2-config/init.sql:/docker-entrypoint-initdb.d/init.sql
        entrypoint: [ "sh", "-c", "apt-get update && apt-get install -y gosu && rm -rf /var/lib/postgresql/data/* && gosu postgres pg_basebackup -h db -p 5432 -D /var/lib/postgresql/data -U replicator -v -P --wal-method=stream && chmod -R 700 /var/lib/postgresql/data && echo \"primary_conninfo = 'host=db port=5432 user=replicator password=pass'\" >> /var/lib/postgresql/data/postgresql.conf && touch /var/lib/postgresql/data/standby.signal && gosu postgres postgres -c config_file=/etc/postgresql/postgresql.conf" ]
        depends_on:
            - db
        ports:
            - "5435:5432"
        networks:
            - app_network

networks:
    app_network:
        driver: bridge
        ipam:
            config:
                - subnet: 172.24.0.0/16

volumes:
    dbdata:
        driver: local
    db_slave_data:
        driver: local
